AULA COM EXEMPLOS EM CODIGO EM LINGUAGEM 

- JAVASCRIPT

Para a(as) linguagem(ens) acima listada(as), eu preciso de uma aula com exemplos em codigo com explicacoes de linha unica em comentarios acima de cada ação (CONFORME MODELO ABAIXO). Cada bloco de codigo separados por assuntos deverão estar em uma caixa de codigo com possibilidade de copiar para IDEs ou Editores. 
Os assuntos (ou topicos) estao listados abaixo:

TOPICOS DA LINGUAGEM:

01 - verificacao em prompt da versao
02 - verificacao em codigo da versao
03 - formas de execução em terminal
04 - formas de execução por plugin do vscode (exemplo: code runner)
05 - hello world basico
06 - saida de dados em prompt
07 - saida de dados em navegador (se possivel)
08 - concatenação de strings e variaveis
09 - exemplos de necessidade de casting
10 - string format, f-string e outras formas modernas de saida
11 - exemplos de declaracao de variáveis e constantes
12 - exemplos de tipos de dados
13 - exemplos de escopo de variaveis
13 - string e suas funções, numbers e suas funções, random, comparisons
14 - operadores matematicos e logicos
15 - funcoes matematicas basicas (exemplo: classe Math)
16 - map, filter, reduce, iterables, iterators (OU SIMILARES)
17 - Hoisting, Bitwise, precedence,
18 - condicionais if, else, elseif, elif, shorthand, nested if, operador ternario
19 - switch, case, break, default
20 - loops, while, do while, for, foreach, for in, break, continue, etc
21 - functions, arrow functions, anonimas, arros functions, lambda
22 - arrays, indexed arrays, associative arrays, multidimencionais e suas funções
23 - lists, tuplas, sets, dictionaries, etc  e suas funções de acesso e manipulacao
24 - superglobais
25 - RegEx, 
26 - Formulários, handling,validation,required, url,email, crud
27 - date and time
28 - User Input, Entrada de dados prompt ou form html 
29 - file handling, open, read, create, write, upload
30 - cookies, sessions, VirtualEnv (OU SIMILARES)
31 - filters, filters advanced
32 - Aula de callback functions, Asynchronous, Promises, Async/Await (OU SIMILARES)
33 - exceptions, try, catch
34 - POO, classes, objects, constructor,destructor,access modifiers
35 - POO, herança, constants, classes abstratas, traits, get/set, protection
36 - POO, Static Methods, Static Properties, Prototypes, Polimorfismos (ou similares)
37 - Namespaces, Iterables
38 - Aula de JSON e Consumo de APIs
39 - Aula de XML
40 - Aula de AJAX

41 - Aula de PDO (ou similar da linguagem
42 - Aula do Framework mais completo (Exemplo: Laravel, Node, express, Nestjs)
43 - Aula de Framework mais leve (Exemplo: Codeigniter, flask)
44 - Aula da Linguagem com CSS e Frameworks (Bootstrap e também Tailwind) além de SASS
44 - Aula da Linguagem com JS e Frameworks (React e Next) além de jQuery
49 - Aula de Interações Úteis com outras tecnologias (JS, Python, Excel, Google)
50 - Aula de Blind, Closures em funções (OU SEMILARES)
51 - pip, npm, npx (OU SIMILARES)
52 - Aulas com libs/frameworks interessantes (gráficos, automações, etc)
53 - Aulas com libs/frameworks inovadoras (IA, Machine Learning, BigData, )
54 - Aula Linguagem com MYSQL, CRUD, principais funções, manipulação, manutenção, etc
55 - Aula Linguagem c/ POSTGRE, CRUD, principais funções, manipulação, manutenção, etc
56 - Aula Linguagem c/ SQLSERVER, CRUD, princip. funções, manipulação, manutenção, etc
57 - Aula Linguagem com MONGO, CRUD, principais funções, manipulação, manutenção, etc
58 - Aula Linguagem com REDIS, CRUD, principais funções, manipulação, manutenção, etc
59 - Criacao de uma API basica usando o framework mais usado para essa linguagem e o banco de dados Postgre
60 - Criação de um FrontEnd usando Tailwind, TS, NextJS para consumir a API criada.

OBSERVACOES: 
- Para cada banco de dados devera implementar estrutura da linguagem com CRUD WEB usando js, html, css, booststrap, SASS
- Para cada banco de dados devera implementar estrutura da linguagem com CRUD WEB usando js, html, css, tailwind
- Para cada banco de dados na impossibilidae de CRUD WEB faça DESKTOP como alternativa
- Para Mongo faça tambem exemplo de banco semi-estruturado 
- Para Redis faça tambem exemplo de banco Cache 
- tutorial basico para implementar para deploy via:
    1 - Docker 
    2 - git github 
    3 - amazon 
    5 - google 
    6 - azure 
    7 - vercel



MODELO DE CODIGO ESPERADO PARA TODOS OS TOPICOS:
(Separacao para cabeçalho, declaracao de variaveis/constantes e entradasaida de dados)

<?php

/*
**************************************
*   PHP - Aula 6 - Variaveis
**************************************
*/
echo "\n////////////////////////////";
echo "\n   PHP - Aula 6 - Variaveis";
echo "\n////////////////////////////\n\n";

// Declaração de variáveis
$nota1 = 0;
$nota2 = 0;
$nota3 = 0;
$media = 0;

// 
// Entrada de dados - Primeira nota
echo "\n\n-----------------------------  \n";
echo "Digite a primeira nota: ";
$nota1 = (float)fgets(STDIN);


// Entrada de dados - Segunda nota
echo "\n\n-----------------------------  \n";
echo "Digite a segunda nota: ";
$nota2 = (float)fgets(STDIN);

// Entrada de dados - Terceira nota
echo "\n\n-----------------------------  \n";
echo "Digite a terceira nota: ";
$nota3 = (float)fgets(STDIN);

// Cálculo da média
echo "\n\n Aguarde . . .\n";
$media = ($nota1 + $nota2 + $nota3) / 3;

// Saída do resultado
echo "\n\n:::::::::::::::::::::::::::::::::::: \n";
echo " Media : " . number_format($media, 2) . "\n";
echo ":::::::::::::::::::::::::::::::::::: \n";


echo "\n\n\n////////////////////////////\n";

?>



