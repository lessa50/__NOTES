LINK:
https://www.youtube.com/watch?v=np_vyd7QlXk&t=417s&pp=ygUMY3Vyc28gRE9DS0VS
DOCKER__BASICO__MATHEUS__unico_46min


/////////////////////////////// VERSION
docker version


/////////////////////////////// NODE
docker run -it node
                        é o mesmo que node:latest
                        ou seja, imagem recente

            --------------------------
            Combinação de duas opções:
            --------------------------
            
            -i (interativo): Mantém o STDIN (entrada padrão) aberto, permitindo que você interaja com o contêiner, mesmo que não esteja conectado diretamente.

            -t (tty): Aloca um terminal virtual (pseudo-TTY) para o contêiner, proporcionando uma interface de terminal interativa, como se você estivesse dentro do contêiner.

            Juntas, essas opções permitem que você execute o contêiner em modo interativo, com um terminal onde você pode digitar comandos.
            --------------------


/////////////////////////////// SAIR 
ctrl + c (2x)


/////////////////////////////// ATIVOS 
docker ps 
 

/////////////////////////////// TODOS 
docker ps -a


/////////////////////////////// START rodando de novo 
docker ps -a 
copia o id 
---------------------------- iniciar container 
docker start <id ou nome>

/////////////////////////////// PARAR
docker stop <id ou nome>


/////////////////////////////// EXCLUIR 
docker rm <id ou nome>


/////////////////////////////// NODE  +  NOME
docker run -it --name <  nome  > node


/////////////////////////////// START  +  NOME
docker start < nome >


/////////////////////////////// STOP  +  NOME
docker stop < nome >


/////////////////////////////// EXCLUIR  +  NOME
docker rm  < nome >


/////////////////////////////// EM BACKGROUND - DETACHED
docker run -d --name lessa_nginx -p 80:80 nginx

                ---------------------------------------------
                -d  significa detached (em background)
                ---------------------------------------------
                -p  significa portas 
                                    - 80 (porta container)
                                    - 80 (porta do host)
                ---------------------------------------------


/////////////////////////////// LOGS
docker logs lessa_nginx 


/////////////////////////////// DOCKERFILE + PROJETO NODE 
criei uma pasta lessa_node_proj_1
entrei e fiz:
                npm init -y 
                npm install express

                //////////////////////////
                --------------------------
                cria arquivo da aplicacao:
                --------------------------
                index.js 
                --------------------------

                //////////////////////////
                cria arquivo Docker:
                --------------------------
                Dockerfile 
                --------------------------

nao vamos precisar do node instalado
so usamos ele para montar o package.json
entao apagamos:
                ///////////////////////////
                ---------------------------
                apagando pastas e arquivos:
                ---------------------------
                - node_modules
                - package-lock.json
                ---------------------------


NA PASTA AGORA SO TEM 3 ARQUIVOS :
..................................
            - index.js 
            - Dockerfile 
            - package.json 




..................................
index.js    
..................................

const express = require('express');
const app = express();
const port = 3000;

app.get('/', (req,res) => {
    res.send('Rodando Node + express no Docker');
});
app.listen(port, () =>{
    console.log("Servidor rodando na porta : " + port);
});





..................................
Dockerfile
..................................


# importando um container basico padrao
FROM node 
# setando o diretorio de trabalho
WORKDIR /usr/src/app

# copiando o package.json para o WORKDIR
# COPY package.json /usr/src/app
# ou simplesmente coloca o ponto .
COPY package.json .

# instalando a aplicação
RUN npm install

# copiando todos os arquivos para o WORKDIR
# copia tudo (.) para o workdir (.)
COPY . .

# expondo a porta da aplicação index.js
EXPOSE 3000

# comando de start da aplicação
CMD ["node", "index.js"]



..................................
gerando a imagem do Dockerfile
..................................
dentro da pasta onde esta os arquivos 
inclusive o Dockerfile vc executa

    - docker build .

ou, para ficar identificavel, podemos
dar nome e uma tag 

    - docker build -t lessa_node_proj_1:v1.01 .   
    ---------------------------------------------------------
    ////// se fizer qualquer mudança tem que buildar de novo
    ---------------------------------------------------------

onde:
------
-t                  :       nome:tag
lessa_node_proj_1   :       nome
v1.01               :       tag       (versao)
.                   :       diretorio atual    


///////////////////////////
verificando as imagens
-------------------------
docker images 
docker image ls


///////////////////////////
usando a imagem pelo nome
-------------------------
docker run -d --name lessa_node_v1_01 -p 3000:3000 lessa_node_proj_1:v1.01


///////////////////////////// EXCLUIR IMAGEM 
-------------- primeiro exclui o container
docker rm lessa_node_v1_01

-------------- depois exclui a imagem
docker rmi lessa_node_proj_1:v1.01

///////////////////////////// BUILDAR IMAGEM   
docker build -t imagem_lessa_node_proj_1:v1.01 .    

///////////////////////////// RODAR CONTAINER  
docker run -d  --name container_lessa_node_proj_1_01 -p 3000:3000 imagem_lessa_node_proj_1:v1.01   

///////////////////////////// APAGAR TUDO - PRUNE
docker system prune 


/////////////////////////////////////////////
/////////////////////////// FIM DA AULA
/////////////////////////////////////////////
















