GIT__BASICO__MATHEUS
https://youtu.be/Zwv9qRyVeU4


/////////////////////////////////  CONFIG
---------- NOME
git config --global user.name "lessa50"
---------- EMAIL
git config --global user.email "lessancandidomendes@gmail.com"
---------- VERIFICANDO
git config --list

/////////////////////////////////  INIT 
dentro da pasta, digite:
                        git init 


/////////////////////////////////  STATUS
git status 


/////////////////////////////////  ADD ponto
git add .


/////////////////////////////////  COMMIT 
git commit -a -m "aprendi git add e git commit"


/////////////////////////////////  GITHUB 
- new repository
- renomear
- public
- create repository "Aula_Git_Matheus"

copiar comandos do push (UM DE CADA VEZ)

///////////////////////////////// REMOTE ADD ORIGIN  
git remote add origin https://github.com/lessa50/Aula_Git_Matheus.git

--------- explicando o comando
git remote: Comando para gerenciar conexões com repositórios remotos
add: Ação para adicionar um novo repositório remoto
origin: Nome padrão dado à conexão principal (você poderia usar outro nome) - "origin" é apenas uma convenção (apelido)
https://github.com/lessa50/Aula_Git_Matheus.git: URL do repositório remoto


///////////////////////////////// BRANCH MAIN 
git branch -M main

--------- explicando o comando
git branch: Comando base para gerenciamento de branches
-M: Flag que combina duas ações:
    -m (move/rename)
    --force (força a operação mesmo se já existir uma branch com o nome)
main: Novo nome desejado para a branch
Antigamente a branch padrão era chamada "master"
Atualmente o padrão da indústria mudou para "main"

--------- Verifica se agora mostra: * main
git branch   

///////////////////////////////// 1ª PUSH 
git push -u origin main

--------- explicando o comando
git push: Envia commits para um repositório remoto
-u ou --set-upstream: Configura a relação de tracking (rastreamento)
origin: Nome do repositório remoto (normalmente o principal)
"origin" é apenas uma convenção (apelido)
main: Nome da branch que será enviada

///////////////////////////////// NOVO BRANCH 
git checkout -b "lessa_testes"

--------- explicando o comando

git checkout: Comando para mudar entre branches
Muda para essa nova branch imediatamente
-b: Flag que indica para criar uma nova branch
Cria uma nova branch chamada "lessa_testes"
"lessa_testes": Nome da nova branch a ser criada


///////////////////////////////// estou em qual BRANCH ?
git branch 

///////////////////////////////// ALTER, ADD, COMMIT
git add .
git commit -a -m "Aprendi a usar o checkout -b"

///////////////////////////////// PUSH
--------- ATENÇÃO 
--------- esse branch nao existe no github - use comando:
git push --set-upstream origin lessa_testes

--------- depois de criado, os proximos push sao só
git push -u origin lessa_testes

--------- ou simplesmente
git push 

///////////////////////////////// DEU CERTO?
git branch -vv     /// mostra commits dos branchs bonito
git branch --v     /// mostra commits dos branchs feio


///////////////////////////////// voltando para MAIN 
git checkout main

///////////////////////////////// MERGE
git merge lessa_testes

///////////////////////////////// NOVO BRANCH
git checkout -b "lessa"

///////////////////////////////// PUSH LESSA 
git push -u origin lessa

///////////////////////////////// mudando para MAIN 
git checkout main 

///////////////////////////////// MERGE LESSA
git merge lessa 

///////////////////////////////// PUSH 
git push

----------- pronto
as alteracoes feitas no lessa agora estao no main 



///////////////////////////////// COMPARE & PULL REQUEST
 eu fiz um clone de um repositorio que tem 2 branchs : main e lessa
cujo main ja tinha feito merge do lessa
agora, em outro lugar, fiz um git clone, mudei para o branch lessa e adicionei alteracoes e agora esta aparecendo a mensagem 
compare & pull request

----- PASSO 1 - sincronize seu branch local:
///////////////////////////////// PULL
git pull origin lessa  
                        # Garante que você tem as últimas alterações

----- PASSO 2 - Envie suas alterações p/ lessa remoto
///////////////////////////////// PUSH 
git push origin lessa

----- PASSO 3 
                - depois de atualizar o lessa 
                - mude para o main e faça merge
                - e tambem faça o PUSH 
///////////////////////////////// CHECKOUT, MERGE, PUSH
git checkout main 
git merge lessa
git push 


///////////////////////////////// LOG
--------- para sair digite ->  q 
git log

///////////////////////////////// EXCLUIR BRANCH
--------- quero excluir o branch lessa_testes 
--------- localmente e remotamente

-------------------------passo 1 - LOCAL 
git branch -d nome_do_branch  
                                # Exclusão segura (só funciona se o branch foi mergeado)

git branch -D nome_do_branch  
                                # Força a exclusão (mesmo se não foi mergeado)


-------------------------passo 2 - REMOTO 
git push origin --delete nome_do_branch
---- ou 
git push origin :nome_do_branch


//////////////////////////////////////////////

//////////////////// ultimas anotacoes
----------- criei clones
criei uma pasta no windows - Git_Matheus__win
criei uma pasta no wsl2 - Git_Matheus__ssh
clone o repositorio Aula_Git_Matheus dentro
das duas pastas e fiz essas anotacoes finais

//////////////////// ultimos comandos no win
----------- add, commit, push no lessa 
----------- merge no main + push 

//////////////////// ultimos comandos no ssh 
----------- git pull origin lessa 
----------- git pull origin main 


/////////////////////////////////// 
/////////////////////////////////////////////
/////////////////////////// FIM DA AULA
/////////////////////////////////////////////





